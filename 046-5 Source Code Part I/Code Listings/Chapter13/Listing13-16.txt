public string EncryptData( string strSource, string strPassword )
{
    byte[] byteIV;
    byte[] byteKey;
    byte[] byteData = Encoding.ASCII.GetBytes( strSource );

    DESCryptoServiceProvider providerCrypto = new DESCryptoServiceProvider();
    byteIV = new byte[providerCrypto.BlockSize/8];
    byteKey = new byte[providerCrypto.BlockSize/8];

    CreateKey( strPassword, providerCrypto.BlockSize, ref byteKey, ref byteIV );
    providerCrypto.Key = byteKey;
    providerCrypto.IV = byteIV;

    MemoryStream streamMemory = new MemoryStream();
    CryptoStream streamCrypto = new CryptoStream( streamMemory, 
        providerCrypto.CreateEncryptor(), CryptoStreamMode.Write );

    for( int intIndex = 0; intIndex < byteData.Length; intIndex += 4096 )
    {
        streamCrypto.Write( byteData, (intIndex*4096), 
            byteData.Length - (intIndex*4096) );
    }

    streamCrypto.FlushFinalBlock();

    byte[] byteResult = new byte[streamMemory.Length];

    streamMemory.Seek( 0, SeekOrigin.Begin );

    streamMemory.Read( byteResult, 0, byteResult.Length );

    streamMemory.Close();
    streamCrypto.Close();

    return Convert.ToBase64String( byteResult );
}
