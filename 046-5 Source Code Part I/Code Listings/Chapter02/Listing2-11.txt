public bool Delete( BusinessObject objSource )
{
    bool boolStatus = false;
    string strObject;
    string strStoredProc;
    SqlParameter parameter;
    SqlCommand command;

    try
    {
        //get the object name
        Type objType = objSource.GetType();
        strObject = objType.FullName.Substring( objType.FullName.IndexOf(".")+1);

        //get the stored procedure name
        strStoredProc = "app_";
        strStoredProc += strObject;
        strStoredProc += "Delete";

        //initialize the command
        command = new SqlCommand( strStoredProc, dataComponent.Connection );
        command.CommandType = CommandType.StoredProcedure;

        //add the parameters
        parameter = new SqlParameter( "@RETURN_VALUE", SqlDbType.Int );
        parameter.Direction = ParameterDirection.ReturnValue;
        command.Parameters.Add( parameter );

        //add the ID parameter
        parameter = new SqlParameter( "@Original_" + strObject + "ID",
            SqlDbType.Int );
        parameter.Direction = ParameterDirection.Input;
        PropertyInfo field = objType.GetProperty( strObject + "ID" );
        parameter.Value = (int)field.GetValue( objSource, null );
        command.Parameters.Add( parameter );

        //original modified date parameter for concurrency check
        parameter = new SqlParameter( "@Original_ModifiedDate", 
            SqlDbType.DateTime );
        parameter.Direction = ParameterDirection.Input;
        field = objType.GetProperty( "RowModified" );
        parameter.Value = (int)field.GetValue( objSource, null );
        command.Parameters.Add( parameter );

        //update the modified date
        objSource.RowModified = DateTime.Now;

        //open the connection and execute query
        dataComponent.Connection.Open();
        command.ExecuteNonQuery();

        //return the results of the procedure
        if( (Int32)command.Parameters["@RETURN_VALUE"].Value == 0 )
            boolStatus = true;
    }
    catch( SqlException exception )
    {
        EventLog systemLog = new EventLog();
        systemLog.Source = "IssueTracker";
        systemLog.WriteEntry( exception.Message, EventLogEntryType.Error, 0 );
    }
    catch( Exception exception )
    {
        EventLog systemLog = new EventLog();
        systemLog.Source = "IssueTracker";
        systemLog.WriteEntry( exception.Message, EventLogEntryType.Error, 0 );
    }
    finally
    {
        dataComponent.Connection.Close();
    }

    return boolStatus;
}
